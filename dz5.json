{
	"info": {
		"_postman_id": "c4bbd7df-7397-4b00-b1dc-72f969a0e5f4",
		"name": "dz5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "h1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}first",
					"host": [
						"{{url}}first"
					]
				}
			},
			"response": []
		},
		{
			"name": "h2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(\"Oleg\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(\"27\");\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(5000);\r",
							"});\r",
							"\r",
							"var req_dat = request.data;\r",
							"\r",
							"pm.test(\"Your test name_2\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req_dat.name)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age_2\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req_dat.age)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary_2\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(+req_dat.salary)\r",
							"});\r",
							"\r",
							"var resp_family = jsonData.family;\r",
							"console.log(\"Family = \", resp_family);\r",
							"\r",
							"\r",
							"pm.test(\"Your test salary*4\", function () {\r",
							"    pm.expect(resp_family[\"u_salary_1_5_year\"]).to.eql(req_dat.salary*4)\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Oleg",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "5000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_3",
					"host": [
						"{{url}}user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "h3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var json_resp = pm.response.json();\r",
							"var req_dat = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(json_resp.name).to.eql(req_dat.name)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(json_resp.age).to.eql(req_dat.age)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary\", function () {\r",
							"    pm.expect(json_resp.salary).to.eql(+req_dat.salary)\r",
							"});\r",
							"\r",
							"\r",
							"var resp_fam = json_resp.family;\r",
							"console.log(\"family= \", resp_fam);\r",
							"\r",
							"pm.test(\"Dog_name test\", function () {\r",
							"    pm.expect(resp_fam[\"pets\"][\"dog\"]).to.have.property(\"name\")\r",
							"})\r",
							"\r",
							"pm.test(\"Dog_age test\", function () {\r",
							"    pm.expect(resp_fam[\"pets\"][\"dog\"]).to.have.property(\"age\")\r",
							"})\r",
							"\r",
							"pm.test(\"Luky name test\", function () {\r",
							"    pm.expect(resp_fam[\"pets\"][\"dog\"][\"name\"]).to.eql(\"Luky\")\r",
							"})\r",
							"\r",
							"pm.test(\"Age_4 test\", function () {\r",
							"    pm.expect(resp_fam[\"pets\"][\"dog\"][\"age\"]).to.eql(4)\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}object_info_3?name=Oleg&age=27&salary=5000",
					"host": [
						"{{url}}object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Oleg"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "h4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var json_resp = pm.response.json();\r",
							"var req_dat = pm.request.url.query.toObject();\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(json_resp.name).to.eql(req_dat.name)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test age\", function () {\r",
							"    pm.expect(json_resp.age).to.eql(+req_dat.age)\r",
							"});\r",
							"\r",
							"var resp_salary_5000 = json_resp.salary[0];\r",
							" var resp_salary_10000 = +json_resp.salary[1];\r",
							" var resp_salary_15000 = +json_resp.salary[2];\r",
							"\r",
							"console.log(\"Salary_resp = \", json_resp.salary);\r",
							"console.log(\"Salary_req = \", +req_dat.salary);\r",
							"console.log(\"Salary_0 = \", resp_salary_5000);\r",
							"console.log(\"Salary_1 = \", resp_salary_10000);\r",
							"console.log(\"Salary_2 = \", resp_salary_15000);\r",
							"\r",
							"pm.test(\"Your test salary_0\", function () {\r",
							"    pm.expect(json_resp.salary[0]).to.eql(+req_dat.salary)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary_1\", function () {\r",
							"    pm.expect(+json_resp.salary[1]).to.eql(req_dat.salary*2)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test salary_2\", function () {\r",
							"    pm.expect(+json_resp.salary[2]).to.eql(req_dat.salary*3)\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", json_resp.name);\r",
							"pm.environment.set(\"age\", json_resp.age);\r",
							"pm.environment.set(\"salary\", json_resp.salary[0]);\r",
							"\r",
							"for (let i = 0; i < json_resp.salary.length; i++) {\r",
							"    console.log(json_resp.salary [i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}object_info_4?name=Oleg&age=27&salary=5000",
					"host": [
						"{{url}}object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Oleg"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "5000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "h5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var j_resp = pm.response.json ();\r",
							"var j_req = request.data;\r",
							"\r",
							"pm.test(\"Your test start qa\", function () {\r",
							"    pm.expect(j_resp).to.have.property(\"start_qa_salary\")\r",
							"});\r",
							"\r",
							"pm.test(\"Your test after6\", function () {\r",
							"    pm.expect(j_resp).to.have.property(\"qa_salary_after_6_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Your test after12\", function () {\r",
							"    pm.expect(j_resp).to.have.property(\"qa_salary_after_12_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Your test after1_5\", function () {\r",
							"    pm.expect(j_resp).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"});\r",
							"\r",
							"pm.test(\"Your test after3_5\", function () {\r",
							"    pm.expect(j_resp).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"});\r",
							"\r",
							"pm.test(\"Your test person\", function () {\r",
							"    pm.expect(j_resp).to.have.property(\"person\")\r",
							"});\r",
							"\r",
							"pm.test(\"Your test start rq\", function () {\r",
							"    pm.expect(j_resp.start_qa_salary).to.eql(+j_req.salary)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test after6_rq\", function () {\r",
							"    pm.expect(j_resp.qa_salary_after_6_months).to.eql(+j_req.salary*2)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test after12_rq\", function () {\r",
							"    pm.expect(j_resp.qa_salary_after_12_months).to.eql(+j_req.salary*2.7)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Your test after1_5_rq\", function () {\r",
							"    pm.expect(j_resp[\"qa_salary_after_1.5_year\"]).to.eql(+j_req.salary*3.3)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test after3_5_rq\", function () {\r",
							"    pm.expect(j_resp[\"qa_salary_after_3.5_years\"]).to.eql(+j_req.salary*3.8)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Your test u_name_rq\", function () {\r",
							"    pm.expect(j_resp[\"person\"][\"u_name\"][1]).to.eql(+j_req.salary)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test u_age\", function () {\r",
							"    pm.expect(j_resp[\"person\"][\"u_age\"]).to.eql(+j_req.age)\r",
							"});\r",
							"\r",
							"pm.test(\"Your test u_salary5\", function () {\r",
							"    pm.expect(j_resp[\"person\"][\"u_salary_5_years\"]).to.eql(+j_req.salary*4.2)\r",
							"});\r",
							"\r",
							"console.log(j_resp.person);\r",
							"for (var prop in j_resp.person) {\r",
							"    console.log(\"person.\" + prop + \" = \" + j_resp.person[prop]);\r",
							"}\r",
							"\r",
							"for (let key in j_resp.person) {\r",
							"  console.log(j_resp.person[key]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{url}}user_info_2",
					"host": [
						"{{url}}user_info_2"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}